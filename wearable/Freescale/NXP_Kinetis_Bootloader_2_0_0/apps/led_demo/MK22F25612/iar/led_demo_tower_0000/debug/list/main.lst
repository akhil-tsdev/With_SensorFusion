###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.1.11101/W32 for ARM       17/Aug/2016  12:59:44
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\src\main.c
#    Command line =  
#        "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\src\main.c"
#        -D NDEBUG -D DEBUG -D CPU_MK22FN256VDC12 -D CPU_IS_ARM_CORTEX_M4=1 -D
#        IAR -D TOWER -lC "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000\debug\list"
#        --diag_suppress Pa050 -o "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000\debug\obj"
#        --no_unroll --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Normal.h" -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../targets/MK22F25612/src\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../targets/MK22F25612/src/startup\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/platform/devices/MK22F25612\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../src\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/include\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/platform\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/platform/devices\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/platform/CMSIS/Include\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/drivers\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/startup\"
#        -I "C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000/../../../../../src/drivers/uart\"
#        -Ohz --use_c++_inline
#    Locale       =  C
#    List file    =  
#        C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000\debug\list\main.lst
#    Object file  =  
#        C:\Users\cwati\Documents\My
#        Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\iar\led_demo_tower_0000\debug\obj\main.o
#
###############################################################################

C:\Users\cwati\Documents\My Work\Freescale\Bootloader\NXP_Kinetis_Bootloader_2_0_0\NXP_Kinetis_Bootloader_2_0_0\apps\led_demo\MK22F25612\src\main.c
      1          /*
      2           * Copyright (c) 2013, Freescale Semiconductor, Inc.
      3           * All rights reserved.
      4           *
      5           * Redistribution and use in source and binary forms, with or without modification,
      6           * are permitted provided that the following conditions are met:
      7           *
      8           * o Redistributions of source code must retain the above copyright notice, this list
      9           *   of conditions and the following disclaimer.
     10           *
     11           * o Redistributions in binary form must reproduce the above copyright notice, this
     12           *   list of conditions and the following disclaimer in the documentation and/or
     13           *   other materials provided with the distribution.
     14           *
     15           * o Neither the name of Freescale Semiconductor, Inc. nor the names of its
     16           *   contributors may be used to endorse or promote products derived from this
     17           *   software without specific prior written permission.
     18           *
     19           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
     20           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
     21           * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     22           * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
     23           * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
     24           * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
     25           * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
     26           * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
     27           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     28           * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     29           */
     30          
     31          #include "fsl_device_registers.h"
     32          #include "milliseconds_delay.h"
     33          
     34          #define LED1_OFFSET 4
     35          #define LED2_OFFSET 5
     36          #define LED3_OFFSET 6
     37          #define LED4_OFFSET 7
     38          
     39          #define DELAY_1MS (1000)
     40          #define LED_COUNT 4
     41          

   \                                 In section .data, align 4
     42          static uint8_t led_offset[LED_COUNT] = { LED1_OFFSET, LED2_OFFSET, LED3_OFFSET, LED4_OFFSET };
   \                     led_offset:
   \   00000000   0x04 0x05          DC8 4, 5, 6, 7
   \              0x06 0x07    
   \   00000004   0x4004C000         DC32 4004C000H, 4004C000H, 4004C000H, 4004C000H
   \              0x4004C000   
   \              0x4004C000   
   \              0x4004C000   
   \   00000014   0x400FF0C0         DC32 400FF0C0H, 400FF0C0H, 400FF0C0H, 400FF0C0H
   \              0x400FF0C0   
   \              0x400FF0C0   
   \              0x400FF0C0   
     43          static PORT_Type *led_port[LED_COUNT] = { PORTD, PORTD, PORTD, PORTD };
     44          static GPIO_Type *led_gpio[LED_COUNT] = { GPIOD, GPIOD, GPIOD, GPIOD };
     45          
     46          static void init_hardware(void)
     47          {
     48              SIM->SCGC5 |= (SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTB_MASK | SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_MASK |
     49                             SIM_SCGC5_PORTE_MASK);
     50          
     51              SIM->SOPT2 |= SIM_SOPT2_PLLFLLSEL_MASK; // set PLLFLLSEL to select the PLL for this clock source
     52          
     53              uint8_t i;
     54              for (i = 0; i < LED_COUNT; i++)
     55              {
     56                  // Enable the LED pins GPIO
     57                  led_port[i]->PCR[led_offset[i]] = PORT_PCR_MUX(1);
     58                  // Set ports to outputs
     59                  led_gpio[i]->PDDR |= (1 << led_offset[i]);
     60              }
     61          }
     62          
     63          static void led_toggle(uint32_t leds)
     64          {
     65              uint8_t i = 0;
     66              // led OFF
     67              for (i = 0; i < LED_COUNT; i++)
     68              {
     69                  led_gpio[i]->PDOR |= (uint32_t)(1 << led_offset[i]);
     70              }
     71              // led ON
     72              led_gpio[leds]->PDOR &= (uint32_t) ~(1 << led_offset[leds]);
     73          }
     74          

   \                                 In section .text, align 4, keep-with-next
     75          void delay(void)
     76          {
   \                     delay: (+1)
   \   00000000   0xB081             SUB      SP,SP,#+4
     77              volatile uint32_t delayTicks = 2000000;
   \   00000002   0x....             LDR.N    R0,??DataTable1  ;; 0x1e8480
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0xE000             B.N      ??delay_0
     78          
     79              while (delayTicks--)
     80              {
     81                  __ASM("nop");
   \                     ??delay_1: (+1)
   \   00000008   0xBF00             nop
     82              }
   \                     ??delay_0: (+1)
   \   0000000A   0x9800             LDR      R0,[SP, #+0]
   \   0000000C   0x1E41             SUBS     R1,R0,#+1
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0x9100             STR      R1,[SP, #+0]
   \   00000012   0xD1F9             BNE.N    ??delay_1
     83          }
   \   00000014   0xB001             ADD      SP,SP,#+4
   \   00000016   0x4770             BX       LR               ;; return
     84          

   \                                 In section .text, align 2, keep-with-next
     85          int main(void)
     86          {
   \                     main: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     87              init_hardware();
   \   00000002   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40048004
   \   00000004   0x....             LDR.N    R5,??DataTable1_2
   \   00000006   0x6B41             LDR      R1,[R0, #+52]
   \   00000008   0xF441 0x5178      ORR      R1,R1,#0x3E00
   \   0000000C   0x6341             STR      R1,[R0, #+52]
   \   0000000E   0x2401             MOVS     R4,#+1
   \   00000010   0x6801             LDR      R1,[R0, #+0]
   \   00000012   0xF441 0x3140      ORR      R1,R1,#0x30000
   \   00000016   0x6001             STR      R1,[R0, #+0]
   \   00000018   0x2000             MOVS     R0,#+0
   \                     ??main_0: (+1)
   \   0000001A   0xEB05 0x0280      ADD      R2,R5,R0, LSL #+2
   \   0000001E   0x6856             LDR      R6,[R2, #+4]
   \   00000020   0x5C29             LDRB     R1,[R5, R0]
   \   00000022   0xF44F 0x7380      MOV      R3,#+256
   \   00000026   0xF846 0x3021      STR      R3,[R6, R1, LSL #+2]
   \   0000002A   0xFA04 0xF101      LSL      R1,R4,R1
   \   0000002E   0x6952             LDR      R2,[R2, #+20]
   \   00000030   0x6953             LDR      R3,[R2, #+20]
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x4319             ORRS     R1,R1,R3
   \   00000036   0x2804             CMP      R0,#+4
   \   00000038   0x6151             STR      R1,[R2, #+20]
   \   0000003A   0xDBEE             BLT.N    ??main_0
     88              // Note: for ROM development, use this version of delay function,
     89              // Which is in order to test if the VTCOR is correct.
     90              milliseconds_delay_init();
   \   0000003C   0x.... 0x....      BL       milliseconds_delay_init
     91              uint32_t leds = 0;
   \                     ??main_1: (+1)
   \   00000040   0x2600             MOVS     R6,#+0
     92              while (1)
     93              {
     94                  led_toggle(leds);
   \                     ??main_2: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \                     ??main_3: (+1)
   \   00000044   0xEB05 0x0180      ADD      R1,R5,R0, LSL #+2
   \   00000048   0x6949             LDR      R1,[R1, #+20]
   \   0000004A   0x680A             LDR      R2,[R1, #+0]
   \   0000004C   0x562B             LDRSB    R3,[R5, R0]
   \   0000004E   0xFA04 0xF303      LSL      R3,R4,R3
   \   00000052   0x1C40             ADDS     R0,R0,#+1
   \   00000054   0x431A             ORRS     R2,R3,R2
   \   00000056   0x2804             CMP      R0,#+4
   \   00000058   0x600A             STR      R2,[R1, #+0]
   \   0000005A   0xDBF3             BLT.N    ??main_3
   \   0000005C   0xEB05 0x0086      ADD      R0,R5,R6, LSL #+2
   \   00000060   0x6940             LDR      R0,[R0, #+20]
   \   00000062   0x6801             LDR      R1,[R0, #+0]
   \   00000064   0x57AA             LDRSB    R2,[R5, R6]
   \   00000066   0xFA04 0xF202      LSL      R2,R4,R2
   \   0000006A   0x4391             BICS     R1,R1,R2
   \   0000006C   0x6001             STR      R1,[R0, #+0]
     95                  milliseconds_delay(DELAY_1MS);
   \   0000006E   0xF44F 0x707A      MOV      R0,#+1000
   \   00000072   0x.... 0x....      BL       milliseconds_delay
     96          
     97                  ++leds;
   \   00000076   0x1C76             ADDS     R6,R6,#+1
     98                  if (leds == LED_COUNT)
   \   00000078   0x2E04             CMP      R6,#+4
   \   0000007A   0xD1E2             BNE.N    ??main_2
     99                  {
    100                      leds = 0;
   \   0000007C   0xE7E0             B.N      ??main_1
    101                  }
    102              }
    103          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x001E8480         DC32     0x1e8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40048004         DC32     0x40048004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     led_offset

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   delay
      16   main
        16   -> milliseconds_delay
        16   -> milliseconds_delay_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
      24  delay
      36  led_offset
          led_port
          led_gpio
     126  main

 
  36 bytes in section .data
 162 bytes in section .text
 
 162 bytes of CODE memory
  36 bytes of DATA memory

Errors: none
Warnings: none
